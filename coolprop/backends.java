/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public final class backends {
  public final static backends INVALID_BACKEND = new backends("INVALID_BACKEND", CoolPropJNI.INVALID_BACKEND_get());
  public final static backends HEOS_BACKEND_PURE = new backends("HEOS_BACKEND_PURE");
  public final static backends HEOS_BACKEND_MIX = new backends("HEOS_BACKEND_MIX");
  public final static backends REFPROP_BACKEND_PURE = new backends("REFPROP_BACKEND_PURE");
  public final static backends REFPROP_BACKEND_MIX = new backends("REFPROP_BACKEND_MIX");
  public final static backends INCOMP_BACKEND = new backends("INCOMP_BACKEND");
  public final static backends IF97_BACKEND = new backends("IF97_BACKEND");
  public final static backends TREND_BACKEND = new backends("TREND_BACKEND");
  public final static backends TTSE_BACKEND = new backends("TTSE_BACKEND");
  public final static backends BICUBIC_BACKEND = new backends("BICUBIC_BACKEND");
  public final static backends SRK_BACKEND = new backends("SRK_BACKEND");
  public final static backends PR_BACKEND = new backends("PR_BACKEND");
  public final static backends VTPR_BACKEND = new backends("VTPR_BACKEND");
  public final static backends PCSAFT_BACKEND = new backends("PCSAFT_BACKEND");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static backends swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + backends.class + " with value " + swigValue);
  }

  private backends(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private backends(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private backends(String swigName, backends swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static backends[] swigValues = { INVALID_BACKEND, HEOS_BACKEND_PURE, HEOS_BACKEND_MIX, REFPROP_BACKEND_PURE, REFPROP_BACKEND_MIX, INCOMP_BACKEND, IF97_BACKEND, TREND_BACKEND, TTSE_BACKEND, BICUBIC_BACKEND, SRK_BACKEND, PR_BACKEND, VTPR_BACKEND, PCSAFT_BACKEND };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

