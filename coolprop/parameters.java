/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public final class parameters {
  public final static parameters INVALID_PARAMETER = new parameters("INVALID_PARAMETER", CoolPropJNI.INVALID_PARAMETER_get());
  public final static parameters igas_constant = new parameters("igas_constant");
  public final static parameters imolar_mass = new parameters("imolar_mass");
  public final static parameters iacentric_factor = new parameters("iacentric_factor");
  public final static parameters irhomolar_reducing = new parameters("irhomolar_reducing");
  public final static parameters irhomolar_critical = new parameters("irhomolar_critical");
  public final static parameters iT_reducing = new parameters("iT_reducing");
  public final static parameters iT_critical = new parameters("iT_critical");
  public final static parameters irhomass_reducing = new parameters("irhomass_reducing");
  public final static parameters irhomass_critical = new parameters("irhomass_critical");
  public final static parameters iP_critical = new parameters("iP_critical");
  public final static parameters iP_reducing = new parameters("iP_reducing");
  public final static parameters iT_triple = new parameters("iT_triple");
  public final static parameters iP_triple = new parameters("iP_triple");
  public final static parameters iT_min = new parameters("iT_min");
  public final static parameters iT_max = new parameters("iT_max");
  public final static parameters iP_max = new parameters("iP_max");
  public final static parameters iP_min = new parameters("iP_min");
  public final static parameters idipole_moment = new parameters("idipole_moment");
  public final static parameters iT = new parameters("iT");
  public final static parameters iP = new parameters("iP");
  public final static parameters iQ = new parameters("iQ");
  public final static parameters iTau = new parameters("iTau");
  public final static parameters iDelta = new parameters("iDelta");
  public final static parameters iDmolar = new parameters("iDmolar");
  public final static parameters iHmolar = new parameters("iHmolar");
  public final static parameters iSmolar = new parameters("iSmolar");
  public final static parameters iCpmolar = new parameters("iCpmolar");
  public final static parameters iCp0molar = new parameters("iCp0molar");
  public final static parameters iCvmolar = new parameters("iCvmolar");
  public final static parameters iUmolar = new parameters("iUmolar");
  public final static parameters iGmolar = new parameters("iGmolar");
  public final static parameters iHelmholtzmolar = new parameters("iHelmholtzmolar");
  public final static parameters iHmolar_residual = new parameters("iHmolar_residual");
  public final static parameters iSmolar_residual = new parameters("iSmolar_residual");
  public final static parameters iGmolar_residual = new parameters("iGmolar_residual");
  public final static parameters iDmass = new parameters("iDmass");
  public final static parameters iHmass = new parameters("iHmass");
  public final static parameters iSmass = new parameters("iSmass");
  public final static parameters iCpmass = new parameters("iCpmass");
  public final static parameters iCp0mass = new parameters("iCp0mass");
  public final static parameters iCvmass = new parameters("iCvmass");
  public final static parameters iUmass = new parameters("iUmass");
  public final static parameters iGmass = new parameters("iGmass");
  public final static parameters iHelmholtzmass = new parameters("iHelmholtzmass");
  public final static parameters iviscosity = new parameters("iviscosity");
  public final static parameters iconductivity = new parameters("iconductivity");
  public final static parameters isurface_tension = new parameters("isurface_tension");
  public final static parameters iPrandtl = new parameters("iPrandtl");
  public final static parameters ispeed_sound = new parameters("ispeed_sound");
  public final static parameters iisothermal_compressibility = new parameters("iisothermal_compressibility");
  public final static parameters iisobaric_expansion_coefficient = new parameters("iisobaric_expansion_coefficient");
  public final static parameters iisentropic_expansion_coefficient = new parameters("iisentropic_expansion_coefficient");
  public final static parameters ifundamental_derivative_of_gas_dynamics = new parameters("ifundamental_derivative_of_gas_dynamics");
  public final static parameters ialphar = new parameters("ialphar");
  public final static parameters idalphar_dtau_constdelta = new parameters("idalphar_dtau_constdelta");
  public final static parameters idalphar_ddelta_consttau = new parameters("idalphar_ddelta_consttau");
  public final static parameters ialpha0 = new parameters("ialpha0");
  public final static parameters idalpha0_dtau_constdelta = new parameters("idalpha0_dtau_constdelta");
  public final static parameters idalpha0_ddelta_consttau = new parameters("idalpha0_ddelta_consttau");
  public final static parameters iBvirial = new parameters("iBvirial");
  public final static parameters iCvirial = new parameters("iCvirial");
  public final static parameters idBvirial_dT = new parameters("idBvirial_dT");
  public final static parameters idCvirial_dT = new parameters("idCvirial_dT");
  public final static parameters iZ = new parameters("iZ");
  public final static parameters iPIP = new parameters("iPIP");
  public final static parameters ifraction_min = new parameters("ifraction_min");
  public final static parameters ifraction_max = new parameters("ifraction_max");
  public final static parameters iT_freeze = new parameters("iT_freeze");
  public final static parameters iGWP20 = new parameters("iGWP20");
  public final static parameters iGWP100 = new parameters("iGWP100");
  public final static parameters iGWP500 = new parameters("iGWP500");
  public final static parameters iFH = new parameters("iFH");
  public final static parameters iHH = new parameters("iHH");
  public final static parameters iPH = new parameters("iPH");
  public final static parameters iODP = new parameters("iODP");
  public final static parameters iPhase = new parameters("iPhase");
  public final static parameters iundefined_parameter = new parameters("iundefined_parameter");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static parameters swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + parameters.class + " with value " + swigValue);
  }

  private parameters(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private parameters(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private parameters(String swigName, parameters swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static parameters[] swigValues = { INVALID_PARAMETER, igas_constant, imolar_mass, iacentric_factor, irhomolar_reducing, irhomolar_critical, iT_reducing, iT_critical, irhomass_reducing, irhomass_critical, iP_critical, iP_reducing, iT_triple, iP_triple, iT_min, iT_max, iP_max, iP_min, idipole_moment, iT, iP, iQ, iTau, iDelta, iDmolar, iHmolar, iSmolar, iCpmolar, iCp0molar, iCvmolar, iUmolar, iGmolar, iHelmholtzmolar, iHmolar_residual, iSmolar_residual, iGmolar_residual, iDmass, iHmass, iSmass, iCpmass, iCp0mass, iCvmass, iUmass, iGmass, iHelmholtzmass, iviscosity, iconductivity, isurface_tension, iPrandtl, ispeed_sound, iisothermal_compressibility, iisobaric_expansion_coefficient, iisentropic_expansion_coefficient, ifundamental_derivative_of_gas_dynamics, ialphar, idalphar_dtau_constdelta, idalphar_ddelta_consttau, ialpha0, idalpha0_dtau_constdelta, idalpha0_ddelta_consttau, iBvirial, iCvirial, idBvirial_dT, idCvirial_dT, iZ, iPIP, ifraction_min, ifraction_max, iT_freeze, iGWP20, iGWP100, iGWP500, iFH, iHH, iPH, iODP, iPhase, iundefined_parameter };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

